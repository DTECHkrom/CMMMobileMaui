<?xml version="1.0" encoding="utf-8" ?>
<view:PageBase
    x:Class="CMMMobileMaui.VIEW.DeviceLocationManagePage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:com="clr-namespace:CMMMobileMaui.COMMON"
    xmlns:cust="clr-namespace:CMMMobileMaui.CUST"
    xmlns:cv="clr-namespace:CMMMobileMaui.CONV"
    xmlns:device="clr-namespace:CMMMobileMaui.API.Contracts.v1.Responses.Device;assembly=CMMMobileMaui.API.Contracts"
    xmlns:view="clr-namespace:CMMMobileMaui.VIEW"
    xmlns:vm="clr-namespace:CMMMobileMaui.VM"
    xmlns:xct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    x:Name="cpLocation"
    x:DataType="vm:VMDeviceLocationManager"
    x:TypeArguments="vm:VMDeviceLocationManager"
    Shell.NavBarIsVisible="False">
    <view:PageBase.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid ColumnDefinitions="auto, *, auto">

                <cust:ZebraScanIcon
                    x:Name="zebraIcon"
                    Grid.Column="0"
                    Margin="10,5,0,0"
                    HeightRequest="32"
                    HorizontalOptions="Start"
                    WidthRequest="32" />

                <cust:LabelIconButton
                    Grid.Column="2"
                    Command="{Binding Path=SelectDeviceCommand}"
                    FontSize="40"
                    Text="find_in_page" />

            </Grid>

            <Grid Grid.Row="1" Margin="5,0,5,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <BoxView
                    Grid.RowSpan="5"
                    Margin="0,10,0,0"
                    BackgroundColor="{Binding Source={x:Static com:SConsts.COLOR_3}}"
                    HorizontalOptions="Start"
                    WidthRequest="2" />

                <BoxView
                    Grid.RowSpan="5"
                    Margin="0,10,0,0"
                    BackgroundColor="{Binding Source={x:Static com:SConsts.COLOR_3}}"
                    HorizontalOptions="End"
                    WidthRequest="2" />

                <BoxView
                    Grid.Row="4"
                    Margin="0,10,0,0"
                    BackgroundColor="{Binding Source={x:Static com:SConsts.COLOR_3}}"
                    HeightRequest="2"
                    VerticalOptions="End" />

                <cust:CustomGroupHeader Title="{cv:Translate device, IsUpper=True}" Style="{StaticResource cghStyle}" />

                <Label
                    Grid.Row="1"
                    HorizontalOptions="Center"
                    Style="{StaticResource lblListHeaderStyle}"
                    Text="{Binding Path=CurrentDevice.AssetNo}" />

                <cust:LabelIconButton
                    Grid.Row="1"
                    Margin="5,0"
                    Command="{Binding Path=HistoryCommand}"
                    HorizontalOptions="End"
                    IsVisible="{Binding Path=CurrentDevice, Converter={xct:IsNotNullConverter}}"
                    Text="history" />

                <StackLayout Grid.Row="3" Orientation="Vertical">
                    <StackLayout.Style>
                        <Style TargetType="StackLayout">
                            <Setter Property="IsVisible" Value="True" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding Path=Location, TargetNullValue=''}"
                                    TargetType="StackLayout"
                                    Value="">
                                    <Setter Property="IsVisible" Value="False" />
                                    <Setter Property="Margin" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackLayout.Style>

                    <cust:CustomGroupHeader
                        Title="{cv:Translate current_location,
                                             IsUpper=True}"
                        Style="{StaticResource cghStyle}"
                        VerticalOptions="Center" />

                    <Label
                        FontAttributes="Bold"
                        FontSize="Body"
                        HorizontalOptions="Center">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsVisible" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Path=Location.LocationName, TargetNullValue=''}"
                                        TargetType="Label"
                                        Value="">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="[" />
                                <Span Text="{Binding Path=Location.LocationName}" />
                                <Span Text="]" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>

                    <Label
                        FontAttributes="Bold"
                        FontSize="Body"
                        HorizontalOptions="Center">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="IsVisible" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Path=Location.Place, TargetNullValue=''}"
                                        TargetType="Label"
                                        Value="">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="[" />
                                <Span Text="{Binding Path=Location.Place}" />
                                <Span Text="]" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </StackLayout>

                <StackLayout
                    Grid.Row="4"
                    IsVisible="{Binding Path=DefaulLocationName, Converter={xct:IsStringNotNullOrEmptyConverter}}"
                    Orientation="Vertical">
                    <cust:CustomGroupHeader Title="{cv:Translate dev_def_location, IsUpper=True}" Style="{StaticResource cghStyle}" />

                    <Button Command="{Binding Path=DefaultLocationCommand}" Text="{Binding Path=DefaulLocationName}" />

                </StackLayout>
            </Grid>

            <Grid Grid.Row="2">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="IsVisible" Value="True" />
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding Path=CurrentDevice, TargetNullValue=''}"
                                TargetType="Grid"
                                Value="">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <cust:CustomGroupHeader Title="{cv:Translate new_location, IsUpper=True}" Style="{StaticResource cghStyle}" />

                <ScrollView
                    Grid.Row="1"
                    Padding="5"
                    VerticalScrollBarVisibility="Never">
                    <ScrollView.Content>
                        <StackLayout BindableLayout.ItemsSource="{Binding Path=CurrentDeviceLocations}" Spacing="5">

                            <BindableLayout.ItemTemplate>
                                <DataTemplate x:DataType="device:GetMainLocationResponse">

                                    <Frame
                                        Padding="0"
                                        BorderColor="DarkGrey"
                                        CornerRadius="0"
                                        HasShadow="True">
                                        <Grid
                                            BackgroundColor="WhiteSmoke"
                                            ColumnDefinitions="*, AUTO"
                                            RowDefinitions="AUTO, AUTO">
                                            <Grid.Behaviors>
                                                <xct:AnimationBehavior Command="{Binding Source={x:Reference cpLocation}, Path=BindingContext.ExecuteLocationCommand}" CommandParameter="{Binding}">
                                                    <xct:AnimationBehavior.AnimationType>
                                                        <xct:FadeAnimation />
                                                    </xct:AnimationBehavior.AnimationType>
                                                </xct:AnimationBehavior>
                                            </Grid.Behaviors>

                                            <Label
                                                FontAttributes="Bold"
                                                HorizontalOptions="Center"
                                                Text="{Binding Path=Name}"
                                                TextTransform="Uppercase"
                                                VerticalOptions="CenterAndExpand"
                                                VerticalTextAlignment="Center">
                                                <Label.Style>
                                                    <Style TargetType="Label">
                                                        <Setter Property="Grid.RowSpan" Value="2" />
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding Path=IsWriteText}"
                                                                TargetType="Label"
                                                                Value="True">
                                                                <Setter Property="Grid.RowSpan" Value="1" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Label.Style>
                                            </Label>

                                            <Label
                                                Grid.RowSpan="2"
                                                Grid.Column="1"
                                                Margin="5"
                                                Text="list">
                                                <Label.Style>
                                                    <Style BasedOn="{StaticResource lblImage}" TargetType="Label">
                                                        <Setter Property="Text" Value="list" />
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding Path=TabSource, Converter={xct:IsNullConverter}}"
                                                                TargetType="Label"
                                                                Value="True">
                                                                <Setter Property="Text" Value="check" />
                                                            </DataTrigger>
                                                            <DataTrigger
                                                                Binding="{Binding Path=IsWriteText}"
                                                                TargetType="Label"
                                                                Value="True">
                                                                <Setter Property="Text" Value="edit" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Label.Style>
                                            </Label>
                                        </Grid>
                                    </Frame>

                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                    </ScrollView.Content>
                </ScrollView>
            </Grid>
        </Grid>
    </view:PageBase.Content>
</view:PageBase>